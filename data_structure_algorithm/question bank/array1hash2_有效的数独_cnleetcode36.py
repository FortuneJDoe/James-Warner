"""
请你判断一个9 x 9 的数独是否有效。只需要 根据以下规则 ，验证已经填入的数字是否有效即可。

数字1-9在每一行只能出现一次。
数字1-9在每一列只能出现一次。
数字1-9在每一个以粗实线分隔的3x3宫内只能出现一次。（请参考示例图）

注意：
一个有效的数独（部分已被填充）不一定是可解的。
只需要根据以上规则，验证已经填入的数字是否有效即可。
空白格用'.'表示。

来源：力扣（LeetCode）
链接：https://leetcode.cn/problems/valid-sudoku
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

输入：board =
[["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
输出：true

输入：board =
[["8","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]
输出：false
解释：除了第一行的第一个数字从 5 改为 8 以外，空格内其他数字均与 示例1 相同。 但由于位于左上角的 3x3 宫内有两个 8 存在, 因此这个数独是无效的。
"""
from typing import List


# leetcode为核心代码模式
class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        # [[数字 _ 出现的次数，范围0~9] 在第 __ 行/列/方格，范围0~8] ('.'认为是数字0)
        row = [[0 for _ in range(10)] for __ in range(9)]
        column = [[0 for _ in range(10)] for __ in range(9)]
        patches = [[0 for _ in range(10)] for __ in range(9)]
        for i in range(len(board)):  # 行遍历
            for j in range(len(board[i])):  # 每行的列遍历
                num = int(board[i][j]) if board[i][j] != '.' else 0
                if row[i][num] or column[j][num] or patches[i // 3 + (j // 3) * 3][num]:
                    return False
                if num:
                    row[i][num] += 1
                    column[j][num] += 1
                    patches[i // 3 + (j // 3) * 3][num] += 1
                else:
                    continue
        return True
